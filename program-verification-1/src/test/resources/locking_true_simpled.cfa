main process cfa {
	var new : int
	var tmp_0 : int
	var old : int
	var lock : int

	loc L6
	init loc L0
	loc L9
	loc LX
	loc LY
	loc LW
	loc LA
	loc LB
	final loc L1
	error loc L2
	loc L8

	L9 -> L8 {
		assume not (tmp_0 /= 0)
	}
	L8 -> L6 {
		assume new /= old
	}
	L8 -> L1 {
		assume not (new /= old)
	}
	L9 -> LX {
		assume tmp_0 /= 0
	}
	LX -> LY {
	    lock := 0
	}
	LY -> L8 {
	    new := new + 1
	}
	L0 -> L6 {
		lock := 0
	}
	L6 -> L2 {
		assume not (lock = 0)
	}
	L6 -> LW {
		assume lock = 0

	}
	LW -> LA {
	    lock := 1
	}
	LA -> LB {
	    old := new
	}
	LB -> L9 {
	    havoc tmp_0
	}
}